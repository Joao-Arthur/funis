import{_ as s,c as a,o as e,a as o}from"./app.a31b0557.js";const d=JSON.parse('{"title":"resolveTimeout","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"relativePath":"promises/resolve-timeout.md"}'),l={name:"promises/resolve-timeout.md"},n=o(`<h1 id="resolvetimeout" tabindex="-1">resolveTimeout <a class="header-anchor" href="#resolvetimeout" aria-hidden="true">#</a></h1><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">resolveTimeout</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">valueToResolve</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><p>Returns a promise that resolves after the timeout.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> promises</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolveTimeout</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello, promise!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">500</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// =&gt; &#39;Hello, promise!&#39;</span></span>
<span class="line"></span></code></pre></div>`,5),p=[n];function t(r,c,i,D,F,y){return e(),a("div",null,p)}const m=s(l,[["render",t]]);export{d as __pageData,m as default};
